#+title: Pull Request Checklist

** Prework
- Run tests, record timings
- Open key source files to understand change spots
- Refine ticket descriptions, find what’s missing
- Make a dummy commit to set the branch name
- Push and create a WIP PR
- Determine stakeholders, dates
- Determine deliverables: docs, migrations, special testing

** Document
- Update the ticket with better description
- Document shortcuts and trade-offs
- Explain what changed and why
- Take/attach screenshots
- Add your own inline comments to PR
- Indicate if there are known performance impacts
- Ensure you have docstrings for new functions, and spell-check them
- Add/improve top-level docstring

** Commit, clean up
- Follow the team commit conventions: length, tags
- Run any linters that aren’t part of CI
- Organize commits into meaningful units; ideally none in error states
- Squash down to a minimal set of changes, often one
- Make [[https://chris.beams.io/posts/git-commit/][excellent]] [[https://www.freecodecamp.org/news/writing-good-commit-messages-a-practical-guide/][commit]] [[https://gist.github.com/turbo/efb8d57c145e00dc38907f9526b60f17][messages]], and consider using [[https://github.com/carloscuesta/gitmoji/commits/master][emojis]]!
- If for some reason you have to make a bunch of squashable commits,
  might as well [[http://whatthecommit.com/][have fun with it]].

** Communicate
- Pair with someone who knows background, capture notes/screenshots
- Push back early if scope seems wrong/unclear
- Alert a reviewer (on slack) when this is ready for eyes
- Tell QA you’re ready for them to test
- Ensure stakeholders are aware of the changes
- Watch for github notifications on feedback (browser alert extension)
- Fix/discuss/resolve all conversations

** Settings
- Assign to yourself
- Mark as not ready to merge if so
- Change Jira status and maybe add a comment
- Assign reviewer(s)
- Assign to QA when ready
- Mark a target release
- Put an event on the calendar if this needs to time with release

** Test
- Run tests before you touch anything, note timings
- Write tests, expand existing
- Deploy to dev/staging and test manually

** General
- Determine if this should be feature-flag guarded
- Follow the PR template (when relevant) (this IS the template!)
- Follow the [[https://medium.com/@biratkirat/step-8-the-boy-scout-rule-robert-c-martin-uncle-bob-9ac839778385][Boy Scout Rule]]: leave the code cleaner than how you found
  it: fix typos, indentation, minor refactoring, DCE, forgotten
  linting, expand tests, etc
- Streamline/automate as much of this as possible
